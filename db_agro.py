import requests
from bs4 import BeautifulSoup
import pandas as pd
import streamlit as st
from datetime import datetime
import streamlit.components.v1 as components

def obter_informacoes_commodity(commodity):
    url = f"https://www.noticiasagricolas.com.br/cotacoes/{commodity}"
    response = requests.get(url)
    soup = BeautifulSoup(response.text, 'html.parser')

    # Obter o t√≠tulo
    titulo = soup.find('a', {'href': f'/cotacoes/{commodity}'}).text

    # Obter as informa√ß√µes na segunda coluna (td) da segunda linha (tr)
    linha_tabela = soup.find_all('tr')[1]
    dados_tabela = linha_tabela.find_all('td')[1].text

    # Exibir a cota√ß√£o atual
    st.sidebar.write("**Cota√ß√£o atual:** R$", dados_tabela)

    # Resto do c√≥digo omitido para maior clareza

def plotar_grafico(df):
    # Configurar a faixa de valores do eixo x e y
    x_range = [df["Datas"].min(), df["Datas"].max()]
    y_range = [df["Pre√ßos"].min(), df["Pre√ßos"].max()]

    # Plotar o gr√°fico
    chart = st.line_chart(df.set_index("Datas"), use_container_width=True)
    chart.x_range = x_range
    chart.y_range = y_range

# Estilo do t√≠tulo
barra_verde = """
<style>
.barra-verde {
    background-color: #00C851;
    height: 10px;
}
</style>
"""

# Cabe√ßalho do aplicativo
components.html(barra_verde)
st.markdown('<div class="title"><h2 class="barra-verde">Agroboard - Dashboard Agro üå±</h2></div>', unsafe_allow_html=True)

# Restante do c√≥digo existente

# Dicion√°rio de correla√ß√£o entre a chave (op√ß√£o selecionada) e o valor (commodity correspondente)
commodity_correlacao = {
    "Boi Gordo üêÇ": "boi-gordo",
    "Soja üå±": "soja",
    "Caf√© ‚òï": "cafe",
    "Frango üê•": "frango",
    "Laranja üçä": "laranja",
    "Milho üåΩ": "milho"
}

# Selecionar a commodity desejada do usu√°rio na barra lateral
commodity_selecionada = st.sidebar.selectbox("Categorias (Commodities)", list(commodity_correlacao.keys()))

# Verificar se a op√ß√£o selecionada tem uma correspond√™ncia
if commodity_selecionada in commodity_correlacao:
    # Obter o valor correspondente no dicion√°rio de correla√ß√£o
    commodity = commodity_correlacao[commodity_selecionada]

    # Chamada da fun√ß√£o com a commodity correlacionada
    obter_informacoes_commodity(commodity)
else:
    st.write("N√£o foi encontrada uma correspond√™ncia para a commodity selecionada.")

# Resumo do projeto
st.sidebar.markdown("---")
st.sidebar.markdown("**Projeto Agroboard**")
st.sidebar.write("O Agroboard - o dashboard agro, tem como objetivo facilitar informa√ß√µes importantes aos empres√°rios do agroneg√≥cio. Sendo assim, a plataforma disponibiliza aos seus usu√°rios as cota√ß√µes atualizadas dos principais produtos agr√≠colas que movimentam a economia no territ√≥rio brasileiro. Desta forma, facilitamos o processo de comunica√ß√£o entre os √≥rg√£os reguladores e os demais membros da comunidade agr√≠cola.")
st.sidebar.write("O projeto foi realizado pelo aluno Matheus Guimar√£es, submetido como trabalho final na disciplina de Introdu√ß√£o √† Programa√ß√£o em 2023.1.")
